#!/usr/bin/env ruby
# encoding: binary

# monkey patching to ensure forward compatibility with Ruby > 1.9
if String.instance_methods.include?(:encoding)
  class Array
    alias _pack pack # the person who wrote this piece of sh*t is an idiot
    def pack(*argv) # I didn't ask you to convert it to UTF-8! Don't presume it!
      _pack(*argv).force_encoding('ASCII-8BIT')
    end
  end
end

###Trifling definitions. see also: decodeGTX.rb
def _exit()
  print('Press <Enter> to exit.'); STDIN.gets; exit
end
MASKHIRAGANA = $*.delete('-p') # whether 2-byte hiragana will be encoded into 1-byte
if (i = $*.index('-o')) # assign offset
  offset_str = $*.delete_at(i+1)
  offset = offset_str.to_i
  offset = offset.zero? ? offset_str.to_i(16) : offset
  while offset > 0xff
    offset >>= 8
  end
  OFFSET = offset
  $*.delete_at(i)
else
  OFFSET = MASKHIRAGANA ? 0xF0 : 0xB0 # default offset
end
CHARfName = 'NEC-C-6226-visual.txt'
URL = 'https://harjit.moe/jistables/' + CHARfName
system('curl -O ' + URL) unless File.exist?(CHARfName) # download the char mapping table
unless File.exist?(CHARfName) then puts("Cannot download char map! Alternatively, you can manually download the plain text file from #{URL}, place it in the same folder, and run this code again."); _exit end
###Trifling definitions end.

$cmap = {} # char map
open(CHARfName).each do |line|
  d = line.sub(/#.*/, '').split
  next if d.length != 2
  key = d[0].to_i(16)
  if !key.zero? and d[1][/U\+(.{4})$/i]
    c = nil
    unless MASKHIRAGANA # hiragana (ignore if MASKHIRAGANA is set true)
      c = (key &0xff)-0x10 if (0x2420..0x2474).include?(key)
    end
    c = (key &0xff)+0x45 if (0x2520..0x257a).include?(key) # katakana
    c = (key &0xff)+0xa0 if (0x2120..0x212f).include?(key) # punctuations
    if c
      c = c.chr
    else
      c = (key+(OFFSET<<8)) &0xffff # this is a 16-bit short
      c = [c].pack('n') # big-endian
    end
    $cmap[[$1.to_i(16)].pack('U')] = c
  end
end

$cmap["|\r\n"] = "\0" # one paragraph ends
$cmap[";\r\n"] = "\1" # line break
puts 'Char map loaded.'

TXTfName = $*[0]
unless TXTfName then puts("Usage: encodeGTX [-p] [-o <offset>] <TXT filename>\n-p     \tIndicates that `MTE.exe` has been patched to be able to display more Chinese (Kanji) chars, so 2-byte hiragana chars will not be encoded into 1-byte, and the default offset will be changed from 0xB0 to 0xF0.\n-o 0xNN\tIf the offset is not the default value (0xB0 or 0xF0), it can be assigned here. It must be an 8-bit unsigned int (0x00 to 0xFF).\n<path>\tThe TXT plain text file to be encoded. The encoded GTX/CTX file will be saved as <path>.GTX/CTX. Especially, note that\n(1) The text file must be in UTF-8 encoding;\n(2) It must not contain chars that are not present in the Shift-JIS code table (you can refer to https://uic.jp/charset/show/cp932);\n(3) It must use `\\r\\n` (not `\\n`) as line breaks (EOL);\n(4) Before EOL of each line, there must be either a semicolon (;) to indicate line break or a vertical slash (|) to indicate end of a paragraph.\nYou can refer to any TXT file generated by `decodeGTX` as a good example."); _exit end
GTXfName = TXTfName + (MASKHIRAGANA ? '.CTX' : '.GTX')

o = open(GTXfName, 'wb')
f = open(TXTfName, 'rb')
succ = fail = 0
while !f.eof?
  byte3 = f.read(3)
  c = $cmap[byte3]
  if c
    o.write(c); succ += 1
  else
    o.write('[0x'+byte3.unpack('H*')[0]+']'); fail += 1
  end
end
o.close
f.close
puts "Conversion OK (#{succ} converted; #{fail} retained)."
_exit
